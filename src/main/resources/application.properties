
server.port=3113
#mongo configuration
spring.data.mongodb.uri=mongodb+srv://cimpapps:baupoc@cluster0-ttxmh.mongodb.net/test?retryWrites=true
#spring.data.mongodb.host=cluster0-shard-00-00-ttxmh.mongodb.net
#spring.data.mongodb.port=27017
spring.data.mongodb.username=cimpapps
spring.data.mongodb.password=baupoc
#spring.data.mongodb.database=test
#SSL configuration
# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true
# The format used for the keystore
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=./keystore.jks
# The password used to generate the certificate
server.ssl.key-store-password=baupoc
# The alias mapped to the certificate
server.ssl.key-alias=tomcat
server.ssl.enabled=true
CLOUDKARAFKA_USERNAME=sc7p509a
CLOUDKARAFKA_PASSWORD=PKVDUIs3ItoNLseETDUZ8-EhgSuOx6XD
#kafka config
spring.kafka.admin.client-id=users-producer
spring.kafka.bootstrap-servers=ark-01.srvs.cloudkafka.com:9094,ark-02.srvs.cloudkafka.com:9094,ark-03.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-consumers
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.connect.json.JsonDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.connect.json.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.aelastic.xpot.users
cloudkarafka.topic=${CLOUDKARAFKA_USERNAME}-default
cloudkarafka.register-user-topic=${CLOUDKARAFKA_USERNAME}-register-user